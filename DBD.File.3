.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH lib::DBD::File 3 "perl 5.007, patch 00" "1/Mar/102" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
DBD::File \- Base class for writing DBI drivers for plain files
.SH "SYNOPSIS"
.PP
.Vb 8
\&    use DBI;
\&    $dbh = DBI->connect("DBI:File:f_dir=/home/joe/csvdb")
\&        or die "Cannot connect: " . $DBI::errstr;
\&    $sth = $dbh->prepare("CREATE TABLE a (id INTEGER, name CHAR(10))")
\&        or die "Cannot prepare: " . $dbh->errstr();
\&    $sth->execute() or die "Cannot execute: " . $sth->errstr();
\&    $sth->finish();
\&    $dbh->disconnect();
.Ve
.SH "DESCRIPTION"
The DBD::File module is not a true DBI driver, but an abstract
base class for deriving concrete DBI drivers from it. The implication is,
that these drivers work with plain files, for example CSV files or
INI files. The module is based on the SQL::Statement module, a simple
SQL engine.
.PP
See the \fIDBI(3)\fR manpage for details on DBI, the \fISQL::Statement(3)\fR manpage for details on
SQL::Statement and the \fIDBD::CSV(3)\fR manpage or the \fIDBD::IniFile(3)\fR manpage for example
drivers.
.Sh "Metadata"
The following attributes are handled by \s-1DBI\s0 itself and not by \s-1DBD::\s0File,
thus they all work like expected:
.PP
.Vb 9
\&    Active
\&    ActiveKids
\&    CachedKids
\&    CompatMode             (Not used)
\&    InactiveDestroy
\&    Kids
\&    PrintError
\&    RaiseError
\&    Warn                   (Not used)
.Ve
The following \s-1DBI\s0 attributes are handled by \s-1DBD::\s0File:
.Ip "AutoCommit" 4
Always on
.Ip "ChopBlanks" 4
Works
.Ip "\s-1NUM_OF_FIELDS\s0" 4
Valid after \f(CW$sth-\fRexecute>
.Ip "\s-1NUM_OF_PARAMS\s0" 4
Valid after \f(CW$sth-\fRprepare>
.Ip "\s-1NAME\s0" 4
Valid after \f(CW$sth-\fRexecute>; undef for Non-Select statements.
.Ip "\s-1NULLABLE\s0" 4
Not really working, always returns an array ref of one's, as \s-1DBD::CSV\s0
doesn't verify input data. Valid after \f(CW$sth-\fRexecute>; undef for
Non-Select statements.
.PP
These attributes and methods are not supported:
.PP
.Vb 4
\&    bind_param_inout
\&    CursorName
\&    LongReadLen
\&    LongTruncOk
.Ve
Additional to the \s-1DBI\s0 attributes, you can use the following dbh
attribute:
.Ip "f_dir" 4
This attribute is used for setting the directory where \s-1CSV\s0 files are
opened. Usually you set it in the dbh, it defaults to the current
directory (\*(R"."). However, it is overwritable in the statement handles.
.Sh "Driver private methods"
.Ip "data_sources" 4
The \f(CWdata_sources\fR method returns a list of subdirectories of the current
directory in the form \*(L"\s-1DBI:CSV:\s0f_dir=$dirname\*(R".
.Sp
If you want to read the subdirectories of another directory, use
.Sp
.Vb 2
\&    my($drh) = DBI->install_driver("CSV");
\&    my(@list) = $drh->data_sources('f_dir' => '/usr/local/csv_data' );
.Ve
.Ip "list_tables" 4
This method returns a list of file names inside \f(CW$dbh\fR\->{'f_dir'}.
Example:
.Sp
.Vb 2
\&    my($dbh) = DBI->connect("DBI:CSV:f_dir=/usr/local/csv_data");
\&    my(@list) = $dbh->func('list_tables');
.Ve
Note that the list includes all files contained in the directory, even
those that have non-valid table names, from the view of \s-1SQL\s0. See
the section on \fICreating and dropping tables\fR above.
.SH "TODO"
.Ip "Joins" 4
The current version of the module works with single table \s-1SELECT\s0's
only, although the basic design of the \s-1SQL::\s0Statement module allows
joins and the likes.
.Ip "Table name mapping" 4
Currently it is not possible to use files with names like \f(CWnames.csv\fR.
Instead you have to use soft links or rename files. As an alternative
one might use, for example a dbh attribute \*(L'table_map\*(R'. It might be a
hash ref, the keys being the table names and the values being the file
names.
.SH "KNOWN BUGS"
.Ip "\(bu" 8
The module is using \fIflock()\fR internally. However, this function is not
available on all platforms. Using \fIflock()\fR is disabled on MacOS and
Windows 95: There's no locking at all (perhaps not so important on
MacOS and Windows 95, as there's a single user anyways).
.SH "AUTHOR AND COPYRIGHT"
This module is currently maintained by
.PP
.Vb 2
\&      Jeff Zucker
\&      <jeff@vpservices.com>
.Ve
The original author is Jochen Wiedmann.
.PP
Copyright (C) 1998 by Jochen Wiedmann
.PP
All rights reserved.
.PP
You may distribute this module under the terms of either the GNU
General Public License or the Artistic License, as specified in
the Perl README file.
.SH "SEE ALSO"
the \fIDBI(3)\fR manpage, the \fIText::CSV_XS(3)\fR manpage, the \fISQL::Statement(3)\fR manpage

.rn }` ''
.IX Title "lib::DBD::File 3"
.IX Name "DBD::File - Base class for writing DBI drivers for plain files"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Subsection "Metadata"

.IX Item "AutoCommit"

.IX Item "ChopBlanks"

.IX Item "\s-1NUM_OF_FIELDS\s0"

.IX Item "\s-1NUM_OF_PARAMS\s0"

.IX Item "\s-1NAME\s0"

.IX Item "\s-1NULLABLE\s0"

.IX Item "f_dir"

.IX Subsection "Driver private methods"

.IX Item "data_sources"

.IX Item "list_tables"

.IX Header "TODO"

.IX Item "Joins"

.IX Item "Table name mapping"

.IX Header "KNOWN BUGS"

.IX Item "\(bu"

.IX Header "AUTHOR AND COPYRIGHT"

.IX Header "SEE ALSO"

