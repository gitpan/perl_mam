.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH B::Bytecode 3 "perl 5.005, patch 53" "8/Aug/98" "Perl Programmers Reference Guide"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
B::Bytecode \- Perl compiler's bytecode backend
.SH "SYNOPSIS"
.PP
.Vb 1
\&        perl -MO=Bytecode[,OPTIONS] foo.pl
.Ve
.SH "DESCRIPTION"
This compiler backend takes Perl source and generates a
platform-independent bytecode encapsulating code to load the
internal structures perl uses to run your program. When the
generated bytecode is loaded in, your program is ready to run,
reducing the time which perl would have taken to load and parse
your program into its internal semi-compiled form. That means that
compiling with this backend will not help improve the runtime
execution speed of your program but may improve the start-up time.
Depending on the environment in which your program runs this may
or may not be a help.
.PP
The resulting bytecode can be run with a special byteperl executable
or (for non-main programs) be loaded via the \f(CWbyteload_fh\fR function
in the \fIB\fR module.
.SH "OPTIONS"
If there are any non-option arguments, they are taken to be names of
objects to be saved (probably doesn't work properly yet).  Without
extra arguments, it saves the main program.
.Ip "\fB\-ofilename\fR" 4
Output to filename instead of \s-1STDOUT\s0.
.Ip "\fB--\fR" 4
Force end of options.
.Ip "\fB\-f\fR" 4
Force optimisations on or off one at a time. Each can be preceded
by \fBno-\fR to turn the option off (e.g. \fB\-fno-compress-nullops\fR).
.Ip "\fB\-fcompress-nullops\fR" 4
Only fills in the necessary fields of ops which have
been optimised away by perl's internal compiler.
.Ip "\fB\-fomit-sequence-numbers\fR" 4
Leaves out code to fill in the op_seq field of all ops
which is only used by perl's internal compiler.
.Ip "\fB\-fbypass-nullops\fR" 4
If op->op_next ever points to a \s-1NULLOP\s0, replaces the op_next field
with the first non-\s-1NULLOP\s0 in the path of execution.
.Ip "\fB\-fstrip-syntax-tree\fR" 4
Leaves out code to fill in the pointers which link the internal syntax
tree together. They're not needed at run-time but leaving them out
will make it impossible to recompile or disassemble the resulting
program.  It will also stop \f(CWgoto label\fR statements from working.
.Ip "\fB\-On\fR" 4
Optimisation level (n = 0, 1, 2, ...). \fB\-O\fR means \fB\-O1\fR.
\fB\-O1\fR sets \fB\-fcompress-nullops\fR \fB\-fomit-sequence numbers\fR.
\fB\-O6\fR adds \fB\-fstrip-syntax-tree\fR.
.Ip "\fB\-D\fR" 4
Debug options (concatenated or separate flags like \f(CWperl -D\fR).
.Ip "\fB\-Do\fR" 4
Prints each \s-1OP\s0 as it's processed.
.Ip "\fB\-Db\fR" 4
Print debugging information about bytecompiler progress.
.Ip "\fB\-Da\fR" 4
Tells the (bytecode) assembler to include source assembler lines
in its output as bytecode comments.
.Ip "\fB\-\s-1DC\s0\fR" 4
Prints each \s-1CV\s0 taken from the final symbol tree walk.
.Ip "\fB\-S\fR" 4
Output (bytecode) assembler source rather than piping it
through the assembler and outputting bytecode.
.Ip "\fB\-m\fR" 4
Compile as a module rather than a standalone program. Currently this
just means that the bytecodes for initialising \f(CWmain_start\fR,
\f(CWmain_root\fR and \f(CWcurpad\fR are omitted.
.SH "EXAMPLES"
.PP
.Vb 1
\&        perl -MO=Bytecode,-O6,-o,foo.plc foo.pl
.Ve
.Vb 3
\&        perl -MO=Bytecode,-S foo.pl > foo.S
\&        assemble foo.S > foo.plc
\&        byteperl foo.plc
.Ve
.Vb 1
\&        perl -MO=Bytecode,-m,-oFoo.pmc Foo.pm
.Ve
.SH "BUGS"
Plenty. Current status: experimental.
.SH "AUTHOR"
Malcolm Beattie, \f(CWmbeattie@sable.ox.ac.uk\fR

.rn }` ''
.IX Title "B::Bytecode 3"
.IX Name "B::Bytecode - Perl compiler's bytecode backend"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-ofilename\fR"

.IX Item "\fB--\fR"

.IX Item "\fB\-f\fR"

.IX Item "\fB\-fcompress-nullops\fR"

.IX Item "\fB\-fomit-sequence-numbers\fR"

.IX Item "\fB\-fbypass-nullops\fR"

.IX Item "\fB\-fstrip-syntax-tree\fR"

.IX Item "\fB\-On\fR"

.IX Item "\fB\-D\fR"

.IX Item "\fB\-Do\fR"

.IX Item "\fB\-Db\fR"

.IX Item "\fB\-Da\fR"

.IX Item "\fB\-\s-1DC\s0\fR"

.IX Item "\fB\-S\fR"

.IX Item "\fB\-m\fR"

.IX Header "EXAMPLES"

.IX Header "BUGS"

.IX Header "AUTHOR"

